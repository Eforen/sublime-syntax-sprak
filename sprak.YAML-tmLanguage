# [PackageDev] target_format: plist, ext: tmLanguage
---
name: Sublime Sprak Syntax
scopeName: source.sprak
fileTypes: [Sprak]
uuid: 2e4fc05e-56be-4036-9f17-8a721250c786

patterns:

- comment: Comment
  name: comment.line.sprak
  match: (#).*
  captures:
    '1': { name: punctuation.definition.comment.sprak }

- comment: Keyword
  name: keyword.control.sprak
  match: \b((end )?if|(end )?select|(resume )?next|case|end|void|close|do|else|for|gosub|goto|loop|on|open|return|then|to|until|while)\b

- comment: Operator
  name: keyword.operator.sprak
  match: (\+|=|<|>|<>|AND|OR)

- comment: Function
  name: support.function.sprak
  match: \b(OnHack|OnIntruder|Count|Range|GetIndexes|Remove|RemoveAll|HasIndex|Append|Type|Round|Int|Mod|Info|Random|GetUser|Name|Time|Width|Height|GetHour|GetMinute|Sleep|Quit|CharToInt|IntToChar|ClearText|Print|Say|PlaySound|Pitch|Sin|Cos|PrintS|Input|Line|Text|Rect|DisplayGraphics|Color|Repeat|HSVtoRGB|RGBToHSV|Lines|GetConnections|Slurp|Connect|DisconnectAll|StringContains|MovePerson|ZapPerson|RestoreCode|Broadcast|IsKeyPressed|HasFloppy|LoadData|ClearData|SaveData|BootFromFloppy|SetMhz|EnableAPI|SetMaxTime|Speed|Charisma|Smelliness|Sleepiness|Drunkenness|Drink|Corruption|IsUser|GetRoom|RemoteFunctionCall|Trippy|TurnLeft|TurnRight|FastForward|Move|QuickBoost)\b

- comment: Numeric
  name: constant.numeric.sprak
  match: \b(\d(\.\d)?)+

- comment: Global
  name: constant.global.sprak
  match: \b\w+\$

- comment: SUB
  name: meta.function.sprak
  match: '^(\w+):'
  captures:
    '1': { name: entity.name.function.sprak }

- comment: Brace, round
  name: meta.brace.round.sprak
  match: '[\(\)]'

- comment: Brace, curly
  name: meta.brace.curly.sprak
  match: '[\{\}]'

- comment: Array
  name: other.array.sprak
  begin: (\w+\()
  beginCaptures:
    '1': { name: constant.array.sprak }
  end: (\))
  endCaptures:
    '1': { name: constant.array.sprak }
  patterns:
  - include: $self

- comment: String, double-quoted
  name: string.quoted.double.sprak
  begin: (")
  beginCaptures:
    '1': { name: punctuation.definition.string.begin.sprak }
  end: (")
  endCaptures:
    '1': { name: punctuation.definition.string.begin.sprak }
  patterns:
  - comment: Escaped double-quote inside double-quoted string
    name: constant.character.escape.sprak
    match: (\\")
  - comment: Single quote inside double-quoted string
    name: other.sprak
    match: (')
  - include: $self

...